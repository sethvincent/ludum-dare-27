{
  "name": "aabb-2d",
  "version": "0.0.0",
  "description": "2d axis aligned bounding boxes",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chrisdickinson/aabb-2d"
  },
  "keywords": [
    "aabb",
    "axis",
    "aligned",
    "bounding",
    "boxes",
    "2d"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "dependencies": {
    "gl-matrix": "2.X.X"
  },
  "devDependencies": {
    "tape": "~0.1.5"
  },
  "testling": {
    "files": "test.js",
    "browsers": {
      "ie": [
        10
      ],
      "firefox": [
        13,
        14,
        15,
        16,
        17,
        "nightly"
      ],
      "chrome": [
        20,
        23,
        "canary"
      ],
      "safari": [
        6
      ],
      "opera": [
        12,
        "next"
      ]
    }
  },
  "readme": "# aabb-2d\n\nAxis aligned bounding boxes for fun and profit.\n\n[![browser support](http://ci.testling.com/chrisdickinson/aabb-2d.png)](http://ci.testling.com/chrisdickinson/aabb-2d)\n\n```javascript\nvar aabb = require('aabb-2d')\n\nvar bounding_box = aabb([0, 0], [12, 12])   // x, y == 0, 0; width, height == 12, 12\n  , other = aabb([10, 10], [2, 2])\n\nbounding_box.intersects(other) // true\nbounding_box.union(other) // -> aabb([10, 10], [2, 2])\n\nbounding_box.translate([2, 2])  // moves the bounding box\nbounding_box.expand(other)  // returns a new aabb that surrounds both bboxes\n\n```\n\n# API\n\n### aabb = [new ]aabb([x, y], [w, h])\n\nreturns a new aabb.\n\n### aabb.perimeter() -> Number\n\nreturns the perimeter length of the box.\n\n### aabb.intperimeter() -> Integer\n\nreturns the integer perimeter length of the box (using a bit shift instead of a multiply.) \n\n### aabb.area() -> Number\n\nreturns the area of the box.\n\n### aabb.width() -> Number\n### aabb.height() -> Number\n### aabb.x0()\n### aabb.y0()\n### aabb.x1()\n### aabb.y1()\n\nreturns:\n\n```\n    x0/y1 ------ x1/y1\n      |           |\n      |           | <-- height\n      |           |\n      |           |\n    x0/y0 ------ x1/y0\n            ^\n            |\n          width\n```\n\n### aabb.translate([x, y])\n\nmoves the box. returns itself.\n\n### aabb.intersects(aabb) -> Boolean\n\nreturns true if the two bounding boxes intersect (or touch at all.)\n\n### aabb.union(aabb) -> new aabb or null\n\nreturns a new `aabb` representing the shared area of the\ntwo aabb's. returns `null` if the boxes don't intersect.\n\n# License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chrisdickinson/aabb-2d/issues"
  },
  "_id": "aabb-2d@0.0.0",
  "_from": "aabb-2d@~0.0.0"
}
