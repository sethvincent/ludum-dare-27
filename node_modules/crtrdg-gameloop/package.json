{
  "name": "crtrdg-gameloop",
  "version": "0.0.3",
  "description": "gameloop module for crtrdg â€“ canvas-based animation.",
  "main": "index.js",
  "scripts": {
    "test": "beefy test.js:bundle.js --live"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sethvincent/crtrdg-gameloop.git"
  },
  "keywords": [
    "games",
    "html",
    "canvas",
    "animation",
    "requestAnimationFrame",
    "game library"
  ],
  "author": {
    "name": "Seth Vincent",
    "email": "sethvincent@gmail.com",
    "url": "http://sethvincent.com"
  },
  "license": "MIT",
  "dependencies": {
    "inherits": "~2.0.0",
    "raf": "0.0.3"
  },
  "readme": "# crtrdg gameloop\n> canvas animation using requestAnimationFrame\n\n## Goals for the crtrdg gameloop:\n- Initialize 2d canvas and animate using requestAnimationFrame.\n- Create a gameloop that emits update and draw events.\n- Emit pause and resume events.\n\n## Requirements\n- node.js\n- browserify / beefy\n\n## Getting started\nTry it out on requirebin: [http://requirebin.com/?gist=5952933](http://requirebin.com/?gist=5952933)\n\n### Install node if you haven't already.\n\n### Install browserify and beefy:\n```\nnpm install -g browserify beefy\n```\n\n### Create an index.html file:\n```\n<!DOCTYPE html>\n<html>\n<head>\n  <title>crtrdg gameloop test</title>\n</head>\n<body>\n\n<canvas id=\"game\"></canvas>\n\n<script src=\"./bundle.js\"></script>\n</body>\n</html>\n```\n\n### Create a game.js file:\n```\nvar Game = require('crtrdg-gameloop');\n\n// initialize the game with the canvas id of your game\n// the width, height, and default background color of the canvas\nvar game = new Game({\n  canvasId: 'game',\n  width: '800',\n  height: '400',\n  backgroundColor: '#ff1f1f'\n});\n\n// every time through the loop, the `update` event will be emitted,\n// interval is the amount of time between each loop\n// listen for the `update` event like this:\ngame.on('update', function(interval){\n  console.log('update', interval);\n});\n\n// every time through the loop, the `draw` event will be emitted.\n// context is the canvas context, and you can use it to draw on the canvas like usual.\n// listen for the `draw` event like this:\ngame.on('draw', function(context){\n  console.log('draw', context);\n  context.fillStyle = '#fff';\n  context.fillRect(10, 10, 10, 10);\n});\n\n// if game.pause() is called somewhere in your code,\n// a `pause` event will be emitted\n// listen for it like this:\ngame.on('pause', function(){\n  console.log('paused');\n});\n\n// if game.resume() is called somewhere in your code,\n// a `resume` event will be emitted\n// listen for it like this:\ngame.on('resume', function(){\n  console.log('resumed');\n});\n```\n\n## Purpose of `crtrdg`:\nAlmost every javascript game / animation library I've found bundles things like requestAnimationFrame polyfill, gameloop, entities, abstract drawing methods, keyboard/mouse input, vector math, and more into one entangled library. If I don't like how the library handles just one of those \n\nWith inspiration from voxel.js, crtrdg is a collection of javascript modules used for developing 2d games.\n\nAs I learned more about node.js, the core events module, and browserify, I realized the ideal api for making simple 2d games could be based on node's events module.\n\n## Other `crtrdg` modules:\n- [crtrdg-entity](http://github.com/sethvincent/crtrdg-entity)\n- [crtrdg-keyboard](http://github.com/sethvincent/crtrdg-keyboard)\n- [crtrdg-mouse](http://github.com/sethvincent/crtrdg-mouse)\n\n## Modules that work well with `crtrdg-gameloop`:\n- [aabb-2d](http://github.com/chrisdickinson/aabb-2d)\n- [gl-matrix](http://github.com/toji/gl-matrix)\n\n## Contributing\n- Fork this repository.\n- Create a branch for you changes.\n- Include tests if applicable.\n- Add/edit documentation for any changes.\n- Submit a pull request.\n\n## License\nMIT",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sethvincent/crtrdg-gameloop/issues"
  },
  "_id": "crtrdg-gameloop@0.0.3",
  "_from": "crtrdg-gameloop@~0.0.1"
}
